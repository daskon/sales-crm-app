name: CRM CI/CD Pipeline

on:
    push:
        branches:
            - main
    pull_request:
        branches:
            - main

jobs:
    backend:
        name: Backend Tests
        runs-on: ubuntu-latest
        defaults:
            run:
                working-directory: ./api
        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Node.js Setup
              uses: actions/setup-node@v3
              with:
                node-version: 20

            - name: Install Dependencies
              run: npm install

            # - name: Run backend tests
            #   run: npm test

    frontend:
        name: Frontend Tests & Build
        runs-on: ubuntu-latest
        defaults:
            run:
                working-directory: ./frontend
        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Setup Node.js
              uses: actions/setup-node@v3
              with:
                node-version: 20

            - name: Install Dependencies
              run: npm install

            # - name: Run frontend tests
            #   run: npm test

            - name: Build Next.js frontend
              run: npm run build


    vercel-deploy:
        name: Deploy to Vercel
        runs-on: ubuntu-latest
        needs: frontend
        permissions:
          contents: read
        steps:
          - name: Checkout
            uses: actions/checkout@v4

          - name: Setup Node
            uses: actions/setup-node@v4
            with:
              node-version: '20'

          - name: Install Vercel CLI
            run: npm i -g vercel@47

          # Optional but helpful: verify token works
          - name: Verify Vercel auth
            run: vercel whoami --token ${{ secrets.VERCEL_TOKEN }}

          # Create .vercel/ and pull env vars for the right project/org
          - name: Link project & pull env (prod)
            env:
              VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
              VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
              VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
            run: |
              vercel pull --yes --environment=production --token "$VERCEL_TOKEN"

          # Build + deploy (if your project needs build, let Vercel handle it)
          - name: Deploy to Vercel (Production)
            env:
              VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
            run: |
              # Add --scope <team-slug> if deploying under a team
              vercel --prod --yes --token "$VERCEL_TOKEN"